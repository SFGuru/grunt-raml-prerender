{"title":"Example RAML API","baseUri":"https://{server.com}/api","version":"1.2","documentation":[{"title":"some extra documentation","content":"<h1 id=\"markdown\">markdown</h1>\n\n<p>with <strong>formatting</strong> and</p>\n\n<ul>\n<li>bullet</li>\n<li>list\nbay of pigs.</li>\n</ul>"},{"title":"more documentation","content":"<p>markdown with <em>formatting</em> and\nbay of pigs.</p>"}],"traits":[{"paged":{"usage":"Apply this to any method that returns a variable length array","description":"Here is the description","queryParameters":{"page":{"displayName":"Starting index of results to fetch","type":"integer","default":0,"minimum":0},"size":{"displayName":"Size of the block to fetch","type":"integer","default":10},"includeCount":{"displayName":"Return total result set count","description":"boolean which is set to true if total result set count is needed for pagination. Counting the total may\ncause a slower response, so set this to true if you do not need to know what the total count is.\n","type":"boolean","default":false}}}}],"protocols":["HTTPS"],"resources":[{"displayName":"get another resource","description":"<p>a different resource can have a <strong>description</strong> too?</p>","relativeUri":"/another","methods":[{"description":"<p>this is a different resource</p>","queryParameters":{"page":{"displayName":"Starting index of results to fetch","type":"integer","default":0,"minimum":0},"size":{"displayName":"Size of the block to fetch","type":"integer","default":10},"includeCount":{"displayName":"Return total result set count","description":"<p>boolean which is set to true if total result set count is needed for pagination. Counting the total may\ncause a slower response, so set this to true if you do not need to know what the total count is.</p>","type":"boolean","default":false}},"is":["paged"],"protocols":["HTTPS"],"method":"get"}]},{"displayName":"a resource can have a display name","description":"<h2 id=\"welikebolddescriptions\">we like bold descriptions</h2>\n\n<p>a resource can have a <strong>description</strong> too?</p>","relativeUri":"/exResourceful","methods":[{"description":"<p>get server config data <em>and</em> important stuff</p>","queryParameters":{"Useful param":{"displayName":"long name of param","type":"string","enum":["cats","dogs"],"description":"<h1 id=\"lengthydescriptionofparam\">Lengthy description of param</h1>\n\n<p>Shows <strong>something</strong> useful, but what</p>","example":"$useful","required":false},"paramSelect":{"displayName":"param2 has a long name too","type":"integer","example":1234,"required":true},"scaleResult":{"displayName":"should results be scaled","description":"<p>a useful param that does the following</p>\n\n<ul>\n<li>creates animals</li>\n<li>creates plants</li>\n</ul>","type":"boolean","default":false}},"responses":{"200":{"description":"<h1 id=\"hereisheader\">here is header</h1>\n\n<p>here are some details about the response</p>\n\n<ul>\n<li>including <strong>markdown</strong> for</li>\n<li>extra stuff</li>\n</ul>\n\n<p>and isn't that great</p>"},"400":{"description":"<p>operation <strong>not</strong> allowed</p>","body":{"application/json":{"schema":"{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"input\": {\n      \"required\": false,\n      \"type\": \"string\"\n    }\n  },\n  \"required\": false,\n  \"type\": \"object\"\n}"}}}},"protocols":["HTTPS"],"method":"get"}]},{"displayName":"A resource gets a display name","uriParameters":{"resourceId":{"displayName":"The id of the resource to post","description":"<p>here is some</p>\n\n<h1 id=\"html\">html</h1>\n\n<p>stuff</p>","type":"string","required":true,"uri":true}},"relativeUri":"/exResourceful/{resourceId}","methods":[{"description":"<h1 id=\"attention\">attention</h1>\n\n<p>we can post to this API too</p>","queryParameters":{"page":{"displayName":"Starting index of results to fetch","type":"integer","default":0,"minimum":0},"size":{"displayName":"Size of the block to fetch","type":"integer","default":10},"includeCount":{"displayName":"Return total result set count","description":"<p>boolean which is set to true if total result set count is needed for pagination. Counting the total may\ncause a slower response, so set this to true if you do not need to know what the total count is.</p>","type":"boolean","default":false},"Useful param":{"displayName":"long name of param","type":"string","enum":["cats","dogs","pigs","sheep","goats","orangatans","voles","fish","warthogs","snakes"],"description":"<p>Shows <strong>something</strong> useful, but what</p>","default":"cats","example":"$useful","required":false}},"is":["paged"],"body":{"application/json":{"schema":"{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"input\": {\n      \"required\": false,\n      \"type\": \"string\"\n    }\n  },\n  \"required\": false,\n  \"type\": \"object\"\n}","example":"{\n  \"input\": \"stuff\"\n}"},"application/xml":{"schema":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<xs:schema \n  xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n  <xs:element name=\"shiporder\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"orderperson\" type=\"xs:string\"/>\n        <xs:element name=\"shipto\">\n          <xs:complexType>\n            <xs:sequence>\n              <xs:element name=\"name\" type=\"xs:string\"/>\n              <xs:element name=\"address\" type=\"xs:string\"/>\n              <xs:element name=\"city\" type=\"xs:string\"/>\n              <xs:element name=\"country\" type=\"xs:string\"/>\n            </xs:sequence>\n          </xs:complexType>\n        </xs:element>\n        <xs:element name=\"item\" maxOccurs=\"unbounded\">\n          <xs:complexType>\n            <xs:sequence>\n              <xs:element name=\"title\" type=\"xs:string\"/>\n              <xs:element name=\"note\" type=\"xs:string\" minOccurs=\"0\"/>\n              <xs:element name=\"quantity\" type=\"xs:positiveInteger\"/>\n              <xs:element name=\"price\" type=\"xs:decimal\"/>\n            </xs:sequence>\n          </xs:complexType>\n        </xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"orderid\" type=\"xs:string\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n","example":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<shiporder orderid=\"889923\"\n  \n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:noNamespaceSchemaLocation=\"shiporder.xsd\">\n  <orderperson>John Smith</orderperson>\n  <shipto>\n    <name>Ola Nordmann</name>\n    <address>Langgt 23</address>\n    <city>4000 Stavanger</city>\n    <country>Norway</country>\n  </shipto>\n  <item>\n    <title>Empire Burlesque</title>\n    <note>Special Edition</note>\n    <quantity>1</quantity>\n    <price>10.90</price>\n  </item>\n  <item>\n    <title>Hide your heart</title>\n    <quantity>1</quantity>\n    <price>9.90</price>\n  </item>\n</shiporder>\n"}},"responses":{"200":{"description":"<p>A long description goes here.</p>","body":{"application/json":{"schema":"{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"input\": {\n      \"required\": false,\n      \"type\": \"string\"\n    }\n  },\n  \"required\": false,\n  \"type\": \"object\"\n}","example":"{\n  \"input\": \"stuff\"\n}"},"application/xml":{"schema":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<xs:schema \n  xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n  <xs:element name=\"shiporder\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"orderperson\" type=\"xs:string\"/>\n        <xs:element name=\"shipto\">\n          <xs:complexType>\n            <xs:sequence>\n              <xs:element name=\"name\" type=\"xs:string\"/>\n              <xs:element name=\"address\" type=\"xs:string\"/>\n              <xs:element name=\"city\" type=\"xs:string\"/>\n              <xs:element name=\"country\" type=\"xs:string\"/>\n            </xs:sequence>\n          </xs:complexType>\n        </xs:element>\n        <xs:element name=\"item\" maxOccurs=\"unbounded\">\n          <xs:complexType>\n            <xs:sequence>\n              <xs:element name=\"title\" type=\"xs:string\"/>\n              <xs:element name=\"note\" type=\"xs:string\" minOccurs=\"0\"/>\n              <xs:element name=\"quantity\" type=\"xs:positiveInteger\"/>\n              <xs:element name=\"price\" type=\"xs:decimal\"/>\n            </xs:sequence>\n          </xs:complexType>\n        </xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"orderid\" type=\"xs:string\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n","example":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<shiporder orderid=\"889923\"\n  \n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:noNamespaceSchemaLocation=\"shiporder.xsd\">\n  <orderperson>John Smith</orderperson>\n  <shipto>\n    <name>Ola Nordmann</name>\n    <address>Langgt 23</address>\n    <city>4000 Stavanger</city>\n    <country>Norway</country>\n  </shipto>\n  <item>\n    <title>Empire Burlesque</title>\n    <note>Special Edition</note>\n    <quantity>1</quantity>\n    <price>10.90</price>\n  </item>\n  <item>\n    <title>Hide your heart</title>\n    <quantity>1</quantity>\n    <price>9.90</price>\n  </item>\n</shiporder>\n"}}}},"method":"post","bodyDescription":"a long description <b>here we go bold</b> and there"}],"description":"<h2 id=\"welikebolddescriptions\">we like bold descriptions</h2>\n\n<p>a resource can have a <strong>description</strong> too?</p>"}],"baseUriParameters":{"server.com":{"type":"string","required":true,"displayName":"server.com"}}}